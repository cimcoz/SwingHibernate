/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.dmf.app.ui;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import swingdemo.framework.EntityTableModel;
import swingdemo.model.Agenda;
import swingdemo.model.AgendaDiaria;
import swingdemo.model.Cliente;
import swingdemo.util.HibernateUtil;

/**
 *
 * @author marcelo
 */
public class AgendaView extends javax.swing.JPanel {

    /**
     * Creates new form AgendaView
     */
    
    EntityManager em;
    EntityTableModel<AgendaDiaria> tableModelAgendaDiaria;
    List<Agenda> listaAgenda;
    Agenda agenda;
    //Paciente seria en el caso de felix
    Cliente cliente;
    
    public AgendaView(Cliente cliente) {
        this.cliente = cliente;
        initComponents();
        initDatos();
        initTabla();
        initCampos();
//        inicializar la fecha
//        tfFechaConsulta.setDate(new Date());
    }
    
    
     private void initDatos() {
        em = HibernateUtil.getEntityManagerFactory().createEntityManager();
        agenda = new Agenda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jXDatePicker1 = new org.jdesktop.swingx.JXDatePicker();
        tfFechaConsulta = new org.jdesktop.swingx.JXDatePicker();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfPaciente = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbxHora = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAgendaDiaria = new javax.swing.JTable();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        tfFechaConsulta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tfFechaConsultaPropertyChange(evt);
            }
        });

        jLabel1.setText("Fecha");

        jLabel2.setText("Paciente");

        jLabel3.setText("Hora");

        cbxHora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]
            { "08:00","09:00","10:00", "11:00", "12:00", "14:00" , "15:00", "16:00", "17:00", "18:00"
            }));

            tablaAgendaDiaria.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null},
                    {null, null, null, null}
                },
                new String [] {
                    "Title 1", "Title 2", "Title 3", "Title 4"
                }
            ));
            jScrollPane1.setViewportView(tablaAgendaDiaria);

            jButton1.setText("Cancelar");

            jButton2.setText("Guardar y Agregar");

            btnGuardar.setText("Guardar");
            btnGuardar.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnGuardarActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
            this.setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3))
                            .addGap(40, 40, 40)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(tfPaciente)
                                .addComponent(cbxHora, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfFechaConsulta, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 271, Short.MAX_VALUE)
                            .addComponent(btnGuardar)
                            .addGap(18, 18, 18)
                            .addComponent(jButton2)
                            .addGap(18, 18, 18)
                            .addComponent(jButton1)))
                    .addContainerGap())
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(63, 63, 63)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(tfPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(tfFechaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(cbxHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 89, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGap(18, 18, 18)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(21, 21, 21)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1)
                        .addComponent(jButton2)
                        .addComponent(btnGuardar))
                    .addContainerGap())
            );
        }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        agenda.setCliente(cliente);
        agenda.setFechaConsulta(tfFechaConsulta.getDate());
        //convertir el combo a Hora;
        SimpleDateFormat formatoDeFecha = new SimpleDateFormat("hh:mm");
        Date horaSeleccionada;
        try {
            horaSeleccionada = formatoDeFecha.parse(cbxHora.getSelectedItem().toString());
            agenda.setHora(horaSeleccionada);
        } catch (ParseException ex) {
            Logger.getLogger(AgendaView.class.getName()).log(Level.SEVERE, null, ex);
        }
        em.getTransaction().begin();
        em.persist(agenda);
        em.getTransaction().commit();
        //Limpiar los datos
        agenda = new Agenda();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void tfFechaConsultaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tfFechaConsultaPropertyChange
        // TODO add your handling code here:
        System.out.println("Propiedad cambio: "+ evt.getPropertyName());
        if (evt.getPropertyName().equals("date")) {
            //recargar la tabla de agenda!!!
            tableModelAgendaDiaria.setRows(crearAgendaDiaria(getListaAgenda()));
            tableModelAgendaDiaria.fireTableDataChanged();
        }
    }//GEN-LAST:event_tfFechaConsultaPropertyChange


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbxHora;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker1;
    private javax.swing.JTable tablaAgendaDiaria;
    private org.jdesktop.swingx.JXDatePicker tfFechaConsulta;
    private javax.swing.JTextField tfPaciente;
    // End of variables declaration//GEN-END:variables

    private void initTabla() {
        //Preparar la lista de agendas diarias
        
        
        tableModelAgendaDiaria = new EntityTableModel<>(AgendaDiaria.class, new ArrayList<AgendaDiaria>());
        tableModelAgendaDiaria.addColumn("hora", "hora");
        tableModelAgendaDiaria.addColumn("cliente", "cliente");
        
        tablaAgendaDiaria.setModel(tableModelAgendaDiaria);
    }
    
    private List<Agenda> getListaAgenda() {
        return em.createQuery("From Agenda a Where a.fechaConsulta = :fecha")
                .setParameter("fecha", tfFechaConsulta.getDate())
                .getResultList();
    }
    
    private List<AgendaDiaria> crearAgendaDiaria(List<Agenda> agendas) {
        List<AgendaDiaria> result = new ArrayList<>();
        for (int i = 0 ; i < cbxHora.getItemCount() ;i++){
            AgendaDiaria ad = new AgendaDiaria();
            for (Agenda a  : agendas){
                if (cbxHora.getItemAt(i).equals(a.getHora().toString())) {
                    ad.setCliente(a.getCliente().getNombre() +", " +a.getCliente().getApellido());
                    ad.setHora(a.getHora().toString());
                    agendas.remove(a);
                }
                else {
                    ad.setCliente("Libre");
                    ad.setHora(cbxHora.getItemAt(i));
                }
            }
            result.add(ad);
            
            
        }
        for (Agenda a  : agendas){
            AgendaDiaria ad = new AgendaDiaria();
            ad.setCliente(a.getCliente().getNombre() +", " +a.getCliente().getApellido());
            ad.setHora(a.getHora().toString());
            result.add(ad);
        }
        return result;
    }

    private void initCombo() {
        System.out.println("Crear los datos para las horas del combo");
        
    }

    private void initCampos() {
      tfPaciente.setText(cliente.getNombre()+ ", "+ cliente.getApellido());
    }
}
